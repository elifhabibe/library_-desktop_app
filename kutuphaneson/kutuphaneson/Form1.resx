<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>